<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  "
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:util="http://www.springframework.org/schema/util" 
	default-autowire="byName">

	<context:annotation-config/>
	<context:component-scan base-package="com.meidusa.venus.registry" />
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

<!-- 	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
				<value>classpath:tomcat.properties</value>
			</list>
		</property>
	</bean> -->
	
	<bean class="com.saike.ucm.client.spring.UcmVenusPropertyPlaceholderConfigurer" destroy-method="destroy">
	   <property name="clientType">
	     <!--不要2個都加！！！！！！！！！！！！！！！！Venus main函数启动的clientType是venus-->
	     <!-- <util:constant static-field="com.saike.ucm.client.domain.ClientType.VENUS"/> -->
	     <!--不要2個都加！！！！！！！！！！！！！！！！Tomcat启动的clientType都是web-->
	     <util:constant static-field="com.saike.ucm.client.domain.ClientType.WEB"/>
	   </property>
	   <!--这个文件里如果有与服务器相同的key，就会使用文件中配置的key， 请注意-->
<!-- 	   <property name="location" value="classpath:tomcat.properties"/>
	   <property name="ignoreResourceNotFound" value="false"/> -->
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${venus4.db.driverClassName}" />
		
		<property name="url" value="${ds.registry_new.url}" />
		<property name="username" value="${ds.registry_new.username.registry}" />
		<property name="password" value="${ds.registry_new.password.registry}" />
		
		<property name="maxActive" value="${venus4.db.registry.maxActive}" />
		<property name="minIdle" value="${venus4.db.registry.minIdle}" />
		<property name="maxIdle" value="${venus4.db.registry.maxIdle}" />
		<property name="initialSize" value="${venus4.db.registry.initialSize}" />
		<property name="maxWait" value="${venus4.db.registry.maxWait}" />
		
		<property name="testOnReturn" value="${venus4.db.registry.testOnReturn}" />
		<property name="testWhileIdle" value="${venus4.db.registry.testWhileIdle}" />
		<property name="testOnBorrow" value="${venus4.db.registry.testOnBorrow}" />
		<property name="removeAbandoned" value="${venus4.db.registry.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${venus4.db.registry.removeAbandonedTimeout}" />
		<property name="validationQuery" value="select 1 " />
		
		<!-- <property name="validationQuery" value="select 1 " />    -->       	<!--  验证连接是否可用，使用的SQL语句 -->
	   	<!--  <property name="testWhileIdle" value="true" />     -->      			<!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除. -->
	    <!-- <property name="testOnBorrow" value="false" />   -->       			<!--  借出连接时不要测试，否则很影响性能,若配置为true,对性能有非常大的影响，性能会下降7-10倍 -->
	    <!-- <property name="timeBetweenEvictionRunsMillis" value="30000" /> -->    <!-- 每30秒运行一次空闲连接回收器 -->
	    <!-- <property name="minEvictableIdleTimeMillis" value="1800000" />  -->    <!-- 池中的连接空闲30分钟后被回收,默认值就是30分钟。 -->
	    <!-- <property name="numTestsPerEvictionRun" value="3" />  -->           	<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量，默认值就是3 -->
	   	<!--  <property name="removeAbandoned" value="true"/> -->                  	<!-- 连接泄漏回收参数，当可用连接数少于3个时才执行   -->
 		<!-- <property name="removeAbandonedTimeout" value="180" /> -->           	<!--连接泄漏回收参数，180秒，泄露的连接可以被删除的超时值  -->
	</bean>
	
	<bean id="oldDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${venus4.db.driverClassName}" />
		
		<property name="url" value="${ds.registry.url}" />
		<property name="username" value="${ds.registry.username.registry}" />
		<property name="password" value="${ds.registry.password.registry}" />
		
		<property name="maxActive" value="${venus4.old.db.maxActive}" />
		<property name="minIdle" value="${venus4.old.db.minIdle}" />
		<property name="maxIdle" value="${venus4.old.db.maxIdle}" />
		<property name="initialSize" value="${venus4.old.db.initialSize}" />
		<property name="maxWait" value="${venus4.old.db.maxWait}" />
		
		<property name="testOnReturn" value="${venus4.db.registry.testOnReturn}" />
		<property name="testWhileIdle" value="${venus4.db.registry.testWhileIdle}" />
		<property name="testOnBorrow" value="${venus4.db.registry.testOnBorrow}" />
		<property name="removeAbandoned" value="${venus4.db.registry.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${venus4.db.registry.removeAbandonedTimeout}" />
		<property name="validationQuery" value="select 1 " />
	</bean> 
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >  
	    <property name="dataSource" ref="dataSource"></property>  
	</bean> 
	
	<bean id="oldJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >  
	    <property name="dataSource" ref="oldDataSource"></property>  
	</bean> 
	
	<bean id="venusApplicationDAO" class="com.meidusa.venus.registry.dao.impl.VenusApplicationDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="venusServerDAO" class="com.meidusa.venus.registry.dao.impl.VenusServerDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="venusServiceDAO" class="com.meidusa.venus.registry.dao.impl.VenusServiceDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="venusServiceConfigDAO" class="com.meidusa.venus.registry.dao.impl.VenusServiceConfigDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="venusServiceMappingDAO" class="com.meidusa.venus.registry.dao.impl.VenusServiceMappingDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="oldServiceMappingDAO" class="com.meidusa.venus.registry.dao.impl.OldServiceMappingDaoImpl" >  
	    <property name="jdbcTemplate" ref="oldJdbcTemplate"></property>  
	</bean> 
	<bean id="cacheVenusServerDAO" class="com.meidusa.venus.registry.dao.impl.CacheVenusServerDaoImpl" init-method="init">  
	    <property name="venusServerDAO" ref="venusServerDAO"></property>  
	</bean> 
	<bean id="cacheVenusServiceDAO" class="com.meidusa.venus.registry.dao.impl.CacheVenusServiceDaoImpl" init-method="init">  
	    <property name="venusServiceDAO" ref="venusServiceDAO"></property>  
	</bean> 
	<bean id="cacheApplicationDAO" class="com.meidusa.venus.registry.dao.impl.CacheVenusApplicationDaoImpl" init-method="init">  
	    <property name="venusApplicationDAO" ref="venusApplicationDAO"></property>  
	</bean> 
	<bean id="cacheServiceConfigDAO" class="com.meidusa.venus.registry.dao.impl.CacheVenusServiceConfigDaoImpl" init-method="init">  
	    <property name="venusServiceConfigDAO" ref="venusServiceConfigDAO"></property>  
	</bean> 
	<bean id="cacheVenusServiceMappingDAO" class="com.meidusa.venus.registry.dao.impl.CacheVenusServiceMappingDaoImpl" init-method="init">  
	    <property name="venusServiceMappingDAO" ref="venusServiceMappingDAO"></property>  
	</bean> 

	<!--注册服务-->
	<bean id="mysqlRegisterService" class="com.meidusa.venus.registry.service.impl.MysqlRegisterService" init-method="init">
		<property name="venusApplicationDAO" ref="venusApplicationDAO"></property>
		<property name="venusServerDAO" ref="venusServerDAO"></property>
		<property name="venusServiceDAO" ref="venusServiceDAO"></property>
		<property name="venusServiceConfigDAO" ref="venusServiceConfigDAO"></property>
		<property name="venusServiceMappingDAO" ref="venusServiceMappingDAO"></property>
		<property name="cacheVenusServerDAO" ref="cacheVenusServerDAO"></property>
		<property name="cacheVenusServiceDAO" ref="cacheVenusServiceDAO"></property>
		<property name="cacheApplicationDAO" ref="cacheApplicationDAO"></property>
		<property name="cacheServiceConfigDAO" ref="cacheServiceConfigDAO"></property>
		<property name="cacheVenusServiceMappingDAO" ref="cacheVenusServiceMappingDAO"></property>
		<property name="transactionTemplate" ref="transactionTemplate"></property>
		<property name="sampleMod" value="${venus4.sample.mod}"></property>
		<property name="enableLocalIp" value="${venus4.loaddef.enable.local.ip}"></property>
		<property name="enableFilterIp" value="${venus4.loaddef.enable.filter.ip}"></property>
		<property name="envIpRange" value="${environment.ip.range}"></property>
	</bean>

	<!--清理服务-->
	<bean id="clearInvalidService" class="com.meidusa.venus.registry.service.impl.ClearInvalidService" init-method="init">
		<property name="registerService" ref="mysqlRegisterService" ></property>
	</bean>
	
	<bean id="syncApplicationisNewService" class="com.meidusa.venus.registry.service.impl.SyncApplicationisNewService" init-method="init">
		<property name="venusServiceDAO" ref="venusServiceDAO" ></property>
		<property name="venusApplicationDAO" ref="venusApplicationDAO" ></property>
	</bean>

	<!--旧注册中心-》新注册中心同步服务-->
	<bean id="oLdServiceMappingService" class="com.meidusa.venus.registry.service.impl.OLdServiceMappingService" init-method="init">
		<property name="oldServiceMappingDAO" ref="oldServiceMappingDAO" ></property>
		<property name="registerService" ref="mysqlRegisterService" ></property>
		<property name="venusServiceMappingDAO" ref="venusServiceMappingDAO" ></property>
		<!--是否需要将旧注册中心的数据同步到新的注册中心，true为需要-->
		<property name="needDataSync" value="${needDataSync}" ></property>
	</bean>
	
	<bean id="transactionManager"   
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource"></property>  
    </bean> 
    
    <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
    </bean>

</beans>
