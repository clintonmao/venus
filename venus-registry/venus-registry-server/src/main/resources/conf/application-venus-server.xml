<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p"
	default-autowire="byName">

	<context:annotation-config/>
	<context:component-scan base-package="com.meidusa.venus.registry" />
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
				<value>classpath:tomcat.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="maxActive" value="${db.maxActive}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="maxIdle" value="${db.maxIdle}" />
		<property name="initialSize" value="${db.initialSize}" />
		<property name="maxWait" value="${db.maxWait}" />
		<property name="testOnReturn" value="${db.testOnReturn}" />
		<property name="testWhileIdle" value="${db.testWhileIdle}" />
		<property name="testOnBorrow" value="${db.testOnBorrow}" />
		<property name="validationQuery" value="select 1 " />
	</bean>
	
	<bean id="oldDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${old.db.driverClassName}" />
		<property name="url" value="${old.db.url}" />
		<property name="username" value="${old.db.username}" />
		<property name="password" value="${old.db.password}" />
		<property name="maxActive" value="${old.db.maxActive}" />
		<property name="minIdle" value="${old.db.minIdle}" />
		<property name="maxIdle" value="${old.db.maxIdle}" />
		<property name="initialSize" value="${old.db.initialSize}" />
		<property name="maxWait" value="${old.db.maxWait}" />
		<property name="testOnReturn" value="${old.db.testOnReturn}" />
		<property name="testWhileIdle" value="${old.db.testWhileIdle}" />
		<property name="testOnBorrow" value="${old.db.testOnBorrow}" />
		<property name="validationQuery" value="select 1 " />
	</bean> 
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >  
	    <property name="dataSource" ref="dataSource"></property>  
	</bean> 
	
	<bean id="oldJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >  
	    <property name="dataSource" ref="oldDataSource"></property>  
	</bean> 
	
	<bean id="venusApplicationDAO" class="com.meidusa.venus.registry.dao.impl.VenusApplicationDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="venusServerDAO" class="com.meidusa.venus.registry.dao.impl.VenusServerDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="venusServiceDAO" class="com.meidusa.venus.registry.dao.impl.VenusServiceDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="venusServiceConfigDAO" class="com.meidusa.venus.registry.dao.impl.VenusServiceConfigDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="venusServiceMappingDAO" class="com.meidusa.venus.registry.dao.impl.VenusServiceMappingDaoImpl" >  
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean> 
	<bean id="oldServiceMappingDAO" class="com.meidusa.venus.registry.dao.impl.OldServiceMappingDaoImpl" >  
	    <property name="jdbcTemplate" ref="oldJdbcTemplate"></property>  
	</bean> 

	<!--注册服务-->
	<bean id="mysqlRegisterService" class="com.meidusa.venus.registry.service.impl.MysqlRegisterService" init-method="init">
		<property name="venusApplicationDAO" ref="venusApplicationDAO"></property>
		<property name="venusServerDAO" ref="venusServerDAO"></property>
		<property name="venusServiceDAO" ref="venusServiceDAO"></property>
		<property name="venusServiceConfigDAO" ref="venusServiceConfigDAO"></property>
		<property name="venusServiceMappingDAO" ref="venusServiceMappingDAO"></property>
	</bean>

	<!--清理服务-->
	<bean id="clearInvalidService" class="com.meidusa.venus.registry.service.impl.ClearInvalidService" init-method="init">
		<property name="registerService" ref="mysqlRegisterService" ></property>
	</bean>

	<!--旧注册中心-》新注册中心同步服务-->
	<bean id="oLdServiceMappingService" class="com.meidusa.venus.registry.service.impl.OLdServiceMappingService" init-method="init">
		<property name="oldServiceMappingDAO" ref="oldServiceMappingDAO" ></property>
		<property name="registerService" ref="mysqlRegisterService" ></property>
		<property name="venusServiceMappingDAO" ref="venusServiceMappingDAO" ></property>
		<!--是否需要将旧注册中心的数据同步到新的注册中心，true为需要-->
		<property name="needDataSync" value="${needDataSync}" ></property>
	</bean>

</beans>
